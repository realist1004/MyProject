<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.my.mapper.BoardMapper">  
 	<!-- <select id="listAll" resultType="BoardDTO">
 		select * from board order by board_no
 	</select> -->
 	
 	<insert id="write" parameterType="com.my.dto.BoardDTO" useGeneratedKeys="true" keyProperty="board_no">
 		<selectKey keyProperty="board_no" resultType="int" order="BEFORE">
 			SELECT BOARD_SEQ.NEXTVAL FROM DUAL
 		</selectKey>
 		insert into board values(#{board_no}, #{board_writer}, #{board_title}, #{board_cont}, #{board_pwd}, default, sysdate )
 	</insert>
 	<select id="read" resultType="BoardDTO" parameterType="int">
 		select * from board where board_no=#{board_no}
 	</select>
 	<update id="hitUpdate"> update board set board_hit=board_hit+1 where  board_no=#{board_no} </update>
	<update id="update"> update board set board_title=#{board_title}, board_cont=#{board_cont}, board_pwd=#{board_pwd}  where board_no=#{board_no}</update>
	<delete id="delete">delete from board where board_no=#{board_no}</delete>
	<select id="listAll" resultType="BoardDTO" parameterType="com.my.dto.SearchCriteria">
		SELECT  *	
		 FROM ( 
		        SELECT board_no, 
		               board_writer, 
		               board_title, 
		               board_cont, 
		               board_pwd,
		               board_hit,
		               board_regdate,
		               ROW_NUMBER() OVER(ORDER BY board_no DESC) AS RNUM
		         FROM board 
		         WHERE 1=1 
		         <include refid="search"></include> <!-- include refid= 반복되는 쿼리를 id값을 지정하여 간단하게 쓴다. 중복처리 -->
		                       ) 
		WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
		ORDER BY board_no DESC
	</select>
	<select id="listCount" parameterType="com.my.dto.SearchCriteria" resultType="int">	
		SELECT COUNT(board_no)
		  FROM board
		   WHERE 1=1
		<include refid="search"></include>	
		 AND board_no > 0	
	</select>
	
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">AND board_title LIKE '%' || #{keyword} || '%'</if> <!-- sql의 ||은 문자나 컬럼을 붙혀준다. -->
			<if test="searchType == 'c'.toString()">AND board_cont LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'w'.toString()">AND board_writer LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'tc'.toString()">AND (board_title LIKE '%' || #{keyword} || '%') or (board_cont LIKE '%' || #{keyword} || '%')</if>
		</if>
	</sql>
	
	<insert id="insertFile" parameterType="hashMap">
		INSERT INTO BOARD_FILE(
			FILE_NO, 
			BOARD_NO,
			ORG_FILE_NAME,
			STORED_FILE_NAME,
			FILE_SIZE
		)VALUES(
			SEQ_BOARD_FILE_NO.NEXTVAL,
			#{BOARD_NO},
			#{ORG_FILE_NAME},
			#{STORED_FILE_NAME},
			#{FILE_SIZE}
		)
		
	</insert>
	<!-- 첨부파일 조회  -->
	<select id="selectFileList" parameterType="int" resultType="hashMap">
		SELECT FILE_NO,
			   ORG_FILE_NAME,
			   ROUND(FILE_SIZE/1024,1) AS FILE_SIZE
		FROM   BOARD_FILE
		WHERE  BOARD_NO	= #{BOARD_NO}
		AND	   DEL_GB = 'N'
		ORDER BY FILE_NO ASC	
	</select>
	<!--첨부파일 다운  -->
	<select id="selectFileInfo" parameterType="hashMap" resultType="hashMap">
		SELECT
			STORED_FILE_NAME,
			ORG_FILE_NAME
		FROM BOARD_FILE
		WHERE FILE_NO = #{FILE_NO}
	</select>
	<!--첨부파일 수정 삭제한 파일은 Y값, N값이면 보여주고 Y이면 보여주시 않는다 -->
	<update id="updateFile" parameterType="hashMap">
		UPDATE BOARD_FILE SET
		DEL_GB = 'Y'
		WHERE FILE_NO = #{FILE_NO}
	</update>
</mapper>